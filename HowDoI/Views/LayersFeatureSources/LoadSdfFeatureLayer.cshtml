@using ThinkGeo.MapSuite.Mvc
@using ThinkGeo.MapSuite
@using ThinkGeo.MapSuite.Drawing
@using ThinkGeo.MapSuite.Layers
@using ThinkGeo.MapSuite.Shapes
@using ThinkGeo.MapSuite.Styles
<style type="text/css">
    .comment
    {
        width: 400px;
        height: 100px;
        left: 80px;
        top: 5px;
        padding: 5px;
        font-size: 10px;
        line-height: 20px;
        z-index: 999;
        position: absolute;
        background-color: #feffc7;
        border: solid 2px #cccccc;
    }
</style>
<div class="four columns" id="navigation">
    @{Html.RenderPartial("SourceCode");}
    <div id="instrux-body">
        <div id="instrux-text">
            The sample demonstrates how to render SdfFeatureLayer using FdoExtension.
            <br />
            <span class="warning">(To use the SdfFeatureLayer functions, you have to reference [Install-Path]\Developer
                Reference\Spatial Extensions\Fdo Extension\FdoExtension.dll, And copy MapSuiteFdoExtensionx86/MapSuiteFdoExtensionx64
                folder from [Install-Path]\\Developer Reference\\System32 to System32\\Map Suite
                *.* folder for x86/x64 platform. ) </span>
        </div>
    </div>
</div>
<div class="twelve columns" id="main">
    <div>
        @{Html.ThinkGeo().Map("Map1", new System.Web.UI.WebControls.Unit(100, System.Web.UI.WebControls.UnitType.Percentage), 510)
           .MapBackground(new GeoSolidBrush(GeoColor.GeographicColors.ShallowOcean))
          .MapUnit(GeographyUnit.DecimalDegree)
          .CurrentExtent(-87.7649869909628, 43.7975200004804, -87.6955215108997, 43.6913981287878)
          .CustomOverlays(overlays => overlays.WorldMapKitWmsWebOverlay())
          .CustomOverlays(overlays =>
          {
              SdfFeatureLayer worldLayer = new SdfFeatureLayer(Server.MapPath("~/App_Data/Sheboygan_CityLimits.sdf"), null);
              worldLayer.ZoomLevelSet.ZoomLevel01.DefaultAreaStyle = AreaStyles.CreateSimpleAreaStyle(GeoColor.FromArgb(100, GeoColor.SimpleColors.Green), GeoColor.SimpleColors.Green);
              worldLayer.ZoomLevelSet.ZoomLevel01.ApplyUntilZoomLevel = ApplyUntilZoomLevel.Level20;

              overlays.LayerOverlay().IsBaseOverlay(false).Layer("WorldLayer", worldLayer);
          }).Render();}
    </div>
</div>
