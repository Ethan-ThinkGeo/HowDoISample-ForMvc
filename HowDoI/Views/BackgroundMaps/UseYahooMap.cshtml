@using ThinkGeo.MapSuite.MvcEdition
@using ThinkGeo.MapSuite.Core
@using System.Configuration;
<div class="four columns" id="navigation">
    @{Html.RenderPartial("SourceCode");}
    <div id="instrux-body">
        <div id="instrux-text">
            This sample displays a Yahoo map. Click buttons below to display different types
            of Yahoo map.<br />
            <input id="btnSatellite" name="btnSatellite" type="button" value="Satellite" size="40%"
                style="width: 40%;" onclick="Map1.setCurrentBackgroundMapType(YAHOO_MAP_SAT);" />
            <input id="btnRoad" name="btnRoad" type="button" value="Regular" size="40%" style="width: 40%;"
                onclick="Map1.setCurrentBackgroundMapType(YAHOO_MAP_REG);" />
            <input id="btnAerial" name="btnAerial" type="button" value="Hybrid" size="40%" style="width: 40%;"
                onclick="Map1.setCurrentBackgroundMapType(YAHOO_MAP_HYB);" />
        </div>
    </div>
</div>
<div class="twelve columns" id="main">
    <div>
        @{
            Html.ThinkGeo().Map("Map1", new System.Web.UI.WebControls.Unit(100, System.Web.UI.WebControls.UnitType.Percentage), 510)
                .MapBackground(new BackgroundLayer(new GeoSolidBrush(GeoColor.FromHtml("#E5E3DF"))))
                .CurrentExtent(-13939426.6371, 6701997.4056, -7812401.86, 2626987.386962)
                .MapUnit(GeographyUnit.Meter)
                .MapTools(tools =>
                {
                    tools.OverlaySwitcherMapTool().Enabled(true);
                    tools.MouseCoordinateMapTool().Enabled(true);
                })
                .CustomOverlays(overlays =>
                {
                    overlays.YahooOverlay("Yahoo Map").JavaScriptLibraryUri(new Uri(ConfigurationManager.AppSettings["YahooUri"])).YahooMapType(YahooMapType.Regular);
                })
                .Render();
        }
    </div>
</div>
